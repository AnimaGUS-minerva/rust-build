name: Test Windows - build of Rust examples

on:
  workflow_dispatch:
    inputs:
      rust_build_branch:
        description: 'Branch with test scripts'
        required: true
        default: 'main'

jobs:
  build-idf-rust-examples:
    name: Build IDF Rust Examples for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest]
        include:
        - os: windows-latest
          ARCH: ''
          TARGET: win-x64
          ASSET_PATH: 'build/dist/esp.zip'
          ASSET_NAME: 'rust-1.56.0-dev-x86_64-pc-windows-msvc.zip'
          ASSET_CONTENT_TYPE: 'application/zip'
          LLVM_ROOT_OPTION: ''
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.inputs.rust_build_branch }}
      - name: Set up Python
        if: ${{ matrix.os == 'macos-latest' || matrix.os == 'ubuntu-latest' || matrix.os == 'ubuntu-18.04' || matrix.os == 'windows-latest' }}
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'
      - name: Setup Ninja
        if: ${{ matrix.os == 'macos-latest' || matrix.os == 'ubuntu-latest' || matrix.os == 'ubuntu-18.04' || matrix.os == 'windows-latest' }}
        uses: seanmiddleditch/gha-setup-ninja@master
      - name: Install Rust
        shell: pwsh
        run: .\Install-RustToolchain.ps1 -ExportFile .\Export-Rust.ps1
      - name: Checkout repository rust-esp32-std-hello
        uses: actions/checkout@v2
        with:
          repository: ivmarkov/rust-esp32-std-hello
          path: rust-esp32-std-hello
      - name: Build rust-esp32-std-hello
        working-directory: rust-esp32-std-hello
        shell: pwsh
        run: |
          . ..\Export-Rust.ps1
          cargo +esp build

