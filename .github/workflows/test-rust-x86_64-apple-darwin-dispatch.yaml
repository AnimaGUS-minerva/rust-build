name: Test macOS x86_64 - build of Rust examples

on:
  workflow_dispatch

jobs:
  build-idf-rust-examples:
    name: Build IDF Rust Examples for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest]
        include:
        - os: macos-latest
          ARCH: ''
          TARGET: macos-x64
          ASSET_PATH: 'build/dist/rust-1.56.0-dev-x86_64-apple-darwin.tar.xz'
          ASSET_NAME: 'rust-1.56.0-dev-x86_64-x86_64-apple-darwin.tar.xz'
          ASSET_CONTENT_TYPE: 'application/x-tar'
          LLVM_ROOT_OPTION: ''
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Set up Python
        if: ${{ matrix.os == 'macos-latest' || matrix.os == 'ubuntu-latest' || matrix.os == 'ubuntu-18.04' || matrix.os == 'windows-latest' }}
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'
      - name: Setup Ninja
        if: ${{ matrix.os == 'macos-latest' || matrix.os == 'ubuntu-latest' || matrix.os == 'ubuntu-18.04' || matrix.os == 'windows-latest' }}
        uses: seanmiddleditch/gha-setup-ninja@master
      - name: Install Rust
        run: ./install-rust-toolchain.sh --export-file export-rust.sh
      - name: Checkout repository rust-esp32-std-hello
        uses: actions/checkout@v2
        with:
          repository: ivmarkov/rust-esp32-std-hello
          path: rust-esp32-std-hello
      - name: Install Cargo-first build dependencies
        run: cargo install cargo-pio ldproxy
      - name: Build rust-esp32-std-hello
        working-directory: rust-esp32-std-hello
        run: |
          cat ../export-rust.sh
          export PATH="/Users/runner/.espressif/tools/xtensa-esp32-elf-clang/esp-12.0.1-20210914-x86_64-apple-darwin/bin/:$PATH"
          export LIBCLANG_PATH="/Users/runner/.espressif/tools/xtensa-esp32-elf-clang/esp-12.0.1-20210914-x86_64-apple-darwin/lib/"
          echo "Content of $LIBCLANG_PATH"
          ls $LIBCLANG_PATH
          source ../export-rust.sh
          cargo +esp build

